import { useEffect, useState } from 'react';
import { fetchPersonalSchedule } from "../../../API/schedule-api/schedule.ts";
import { fetchAllData, DataItem } from "../../../API/schedule-api/dropdown-api.ts";
import { fetchFilteredSchedule } from "../../../API/schedule-api/general-schedule.ts";
import { Card, Typography, Spin, Alert, Tag, Space, Divider, Row, Col, Timeline, Tabs, Button, Radio } from 'antd';
import { ClockCircleOutlined, BookOutlined, UserOutlined, HomeOutlined, TeamOutlined, CalendarOutlined } from '@ant-design/icons';
import Dropdown from '../../../components/dropdown/DropdownSelect';

// –û–ø—Ä–µ–¥–µ–ª–∏–º —Ç–∏–ø—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏)
interface ScheduleCall {
  para: string;
  time: string;
}

interface ScheduleEntry {
  date: string;
  day_of_week: string;
  group: string;
  cabinet: string;
  lesson: string;
  teacher: string;
  schedule_call: ScheduleCall;
  id?: string | number; // –î–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
}

interface ScheduleData {
  schedules: ScheduleEntry[];
}

// –¢–∏–ø –¥–ª—è —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
interface GroupedSchedule {
  [date: string]: {
    day_of_week: string;
    entries: ScheduleEntry[];
  };
}

// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø–æ –Ω–µ–¥–µ–ª—è–º
interface WeeklyGroupedSchedule {
  [weekNumber: string]: {
    dates: {
      [date: string]: {
        day_of_week: string;
        entries: ScheduleEntry[];
      }
    }
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –¥–ª—è —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
type ViewMode = 'personal' | 'general';

export const SchedulePage = () => {
  const [scheduleData, setScheduleData] = useState<ScheduleData | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [viewMode, setViewMode] = useState<ViewMode>('personal');
  const [groupData, setGroupData] = useState<DataItem[]>([]);
  const [cabinetData, setCabinetData] = useState<DataItem[]>([]);
  const [teacherData, setTeacherData] = useState<DataItem[]>([]);
  const [selectedGroup, setSelectedGroup] = useState<string | null>();
  const [selectedCabinet, setSelectedCabinet] = useState<string | null>();
  const [selectedTeacher, setSelectedTeacher] = useState<string | null>();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
  const loadPersonalSchedule = async () => {
    try {
      setLoading(true);
      setError(null);
      const data = await fetchPersonalSchedule();
      setScheduleData(data);
    } catch (err) {
      console.error("Failed to fetch schedule data:", err);
      setError(err instanceof Error ? err.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è");
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
  const loadGeneralSchedule = async () => {
    try {
      setLoading(true);
      setError(null);
      const data = await fetchFilteredSchedule(selectedGroup, selectedCabinet, selectedTeacher);
      setScheduleData(data);
      console.log("–ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:", data);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", err);
      setError(err instanceof Error ? err.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è");
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
  const loadDropdownData = async () => {
    try {
      const [groups, cabinets, teachers] = await fetchAllData();
      setGroupData(groups);
      setCabinetData(cabinets);
      setTeacherData(teachers);
      console.log("–ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤:", { groups, cabinets, teachers });
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤:", err);
      setError(err instanceof Error ? err.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤");
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ
  const handleValueChange = (value: string, name: string) => {
    console.log(`–ò–∑–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ${name}:`, value);
    switch (name) {
      case 'group_id':
        setSelectedGroup(value);
        break;
      case 'cabinet_id':
        setSelectedCabinet(value);
        break;
      case 'teacher_id':
        setSelectedTeacher(value);
        break;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  const handleViewModeChange = (mode: ViewMode) => {
    setViewMode(mode);
    if (mode === 'personal') {
      loadPersonalSchedule();
    } else {
      // –ü—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –æ–±—â–∏–π —Ä–µ–∂–∏–º, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
      loadDropdownData();
      // –ó–∞—Ç–µ–º –∑–∞–≥—Ä—É–∂–∞–µ–º –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
      setSelectedGroup(null);
      setSelectedCabinet(null);
      setSelectedTeacher(null);
      loadGeneralSchedule();
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleApplyFilters = () => {
    loadGeneralSchedule();
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleClearAllFilters = () => {
    setSelectedGroup(null);
    setSelectedCabinet(null);
    setSelectedTeacher(null);
    loadGeneralSchedule();
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  useEffect(() => {
    if (viewMode === 'personal') {
      loadPersonalSchedule();
    } else {
      loadDropdownData();
      loadGeneralSchedule();
    }
  }, []); // –£–±–∏—Ä–∞–µ–º viewMode –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏

  if (loading) {
    return (
      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>
        <Spin size="large" tip="–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è..." />
      </div>
    );
  }

  if (error) {
    return (
      <Alert
        message="–û—à–∏–±–∫–∞"
        description={error}
        type="error"
        showIcon
        style={{ maxWidth: '800px', margin: '20px auto' }}
      />
    );
  }

  if (!scheduleData || !scheduleData.schedules || scheduleData.schedules.length === 0) {
    return (
      <Alert
        message="–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –Ω–µ—Ç –∑–∞–Ω—è—Ç–∏–π."
        type="info"
        showIcon
        style={{ maxWidth: '800px', margin: '20px auto' }}
      />
    );
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –Ω–µ–¥–µ–ª–∏ –∏–∑ –¥–∞—Ç—ã
  const getWeekNumber = (dateStr: string) => {
    const date = new Date(dateStr.split('.').reverse().join('-'));
    const firstDayOfYear = new Date(date.getFullYear(), 0, 1);
    const pastDaysOfYear = (date.getTime() - firstDayOfYear.getTime()) / 86400000;
    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);
  };

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ –Ω–µ–¥–µ–ª—è–º –∏ –¥–∞—Ç–∞–º
  const groupedByWeek = scheduleData.schedules.reduce<WeeklyGroupedSchedule>((acc, schedule) => {
    const { date, day_of_week } = schedule;
    const weekNumber = `–ù–µ–¥–µ–ª—è ${getWeekNumber(date)}`;
    
    if (!acc[weekNumber]) {
      acc[weekNumber] = { dates: {} };
    }
    
    if (!acc[weekNumber].dates[date]) {
      acc[weekNumber].dates[date] = { day_of_week, entries: [] };
    }
    
    acc[weekNumber].dates[date].entries.push(schedule);
    return acc;
  }, {});

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ç–µ–≥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞
  const getLessonTagColor = (lesson: string) => {
    const colors = ['blue', 'green', 'purple', 'magenta', 'cyan', 'orange', 'geekblue'];
    // –ü—Ä–æ—Å—Ç–æ–π —Ö–µ—à –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
    const hash = lesson.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);
    return colors[hash % colors.length];
  };

  // –¶–≤–µ—Ç–∞ –¥–ª—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
  const dayColors: Record<string, string> = {
    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫': 'blue',
    '–í—Ç–æ—Ä–Ω–∏–∫': 'cyan',
    '–°—Ä–µ–¥–∞': 'green',
    '–ß–µ—Ç–≤–µ—Ä–≥': 'orange',
    '–ü—è—Ç–Ω–∏—Ü–∞': 'purple',
    '–°—É–±–±–æ—Ç–∞': 'magenta',
    '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ': 'red'
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞—Ä
  const getMoodEmoji = (entriesCount: number) => {
    if (entriesCount === 1) return "üòä"; // —Å—á–∞—Å—Ç–ª–∏–≤—ã–π (1 –ø–∞—Ä–∞)
    if (entriesCount === 2) return "üôÇ"; // –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π (2 –ø–∞—Ä—ã)
    if (entriesCount === 3) return "üòê"; // —Å–ª–µ–≥–∫–∞ –≥—Ä—É—Å—Ç–Ω—ã–π (3 –ø–∞—Ä—ã)
    return "üò©"; // –æ—á–µ–Ω—å –≥—Ä—É—Å—Ç–Ω—ã–π (4+ –ø–∞—Ä—ã)
  };

  return (
    <div style={{ padding: '20px', maxWidth: '1000px', margin: '0 auto' }}>
      <Typography.Title level={1} style={{ textAlign: 'center', marginBottom: '20px' }}>
        –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π
      </Typography.Title>
      
      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
      <div style={{ marginBottom: '20px', textAlign: 'center' }}>
        <Radio.Group 
          value={viewMode} 
          onChange={(e) => handleViewModeChange(e.target.value)}
          buttonStyle="solid"
        >
          <Radio.Button value="personal">–ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</Radio.Button>
          <Radio.Button value="general">–û–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</Radio.Button>
        </Radio.Group>
      </div>
      
      {/* –ë–ª–æ–∫ —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º–∏ —Å–ø–∏—Å–∫–∞–º–∏ –¥–ª—è –æ–±—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è */}
      {viewMode === 'general' && (
        <Card 
          style={{ marginBottom: '20px', borderRadius: '8px' }}
          title="–§–∏–ª—å—Ç—Ä—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
        >
          <Row gutter={[16, 16]}>
            <Col xs={24} md={8}>
              <Typography.Text strong>–ì—Ä—É–ø–ø–∞</Typography.Text>
              <Dropdown
                dataInfo={groupData}
                value={selectedGroup}
                setValue={(value) => handleValueChange(value, 'group_id')}
                clearDropdownValue={() => setSelectedGroup(null)}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É"
              />
            </Col>
            <Col xs={24} md={8}>
              <Typography.Text strong>–ö–∞–±–∏–Ω–µ—Ç</Typography.Text>
              <Dropdown
                dataInfo={cabinetData}
                value={selectedCabinet}
                setValue={(value) => handleValueChange(value, 'cabinet_id')}
                clearDropdownValue={() => setSelectedCabinet(null)}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–±–∏–Ω–µ—Ç"
              />
            </Col>
            <Col xs={24} md={8}>
              <Typography.Text strong>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</Typography.Text>
              <Dropdown
                dataInfo={teacherData}
                value={selectedTeacher}
                setValue={(value) => handleValueChange(value, 'teacher_id')}
                clearDropdownValue={() => setSelectedTeacher(null)}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"
              />
            </Col>
          </Row>
          <Row justify="end" style={{ marginTop: '16px' }}>
            <Space>
              <Button onClick={handleClearAllFilters}>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</Button>
              <Button type="primary" onClick={handleApplyFilters}>–ü—Ä–∏–º–µ–Ω–∏—Ç—å</Button>
            </Space>
          </Row>
        </Card>
      )}
      
      <Tabs
        type="card"
        items={Object.entries(groupedByWeek).map(([weekNumber, { dates }]) => ({
          key: weekNumber,
          label: (
            <Space>
              <CalendarOutlined />
              {weekNumber}
            </Space>
          ),
          children: (
            <Space direction="vertical" size="large" style={{ width: '100%' }}>
              {Object.entries(dates).map(([date, { day_of_week, entries }]) => (
                <Card 
                  key={date}
                  title={
                    <Typography.Title level={2} style={{ margin: 0, color: dayColors[day_of_week] || 'blue' }}>
                      {day_of_week}
                    </Typography.Title>
                  }
                  bordered={true}
                  style={{ borderRadius: '8px', boxShadow: '0 2px 8px rgba(0,0,0,0.1)' }}
                >
                  <Divider orientation="left">
                    <Space>
                      <CalendarOutlined />
                      <Typography.Text strong>{date}</Typography.Text>
                      <Typography.Text style={{ fontSize: '20px' }}>{getMoodEmoji(entries.length)}</Typography.Text>
                    </Space>
                  </Divider>
                  
                  <Timeline>
                    {entries.map((scheduleItem, index) => (
                      <Timeline.Item 
                        key={scheduleItem.id || `${date}-${scheduleItem.schedule_call.para}-${index}`}
                        color={getLessonTagColor(scheduleItem.lesson)}
                        dot={<ClockCircleOutlined style={{ fontSize: '16px' }} />}
                      >
                        <Card 
                          size="small" 
                          style={{ 
                            marginBottom: '10px',
                            borderLeft: `3px solid ${getLessonTagColor(scheduleItem.lesson)}`,
                            backgroundColor: '#fafafa'
                          }}
                        >
                          <Row gutter={[16, 8]}>
                            <Col span={24}>
                              <Space>
                                <Tag color="volcano">{scheduleItem.schedule_call.para} –ø–∞—Ä–∞</Tag>
                                <Typography.Text strong>{scheduleItem.schedule_call.time}</Typography.Text>
                              </Space>
                            </Col>
                            
                            <Col span={24}>
                              <Typography.Title level={4} style={{ margin: '8px 0' }}>
                                <BookOutlined style={{ marginRight: '8px' }} />
                                {scheduleItem.lesson}
                              </Typography.Title>
                            </Col>
                            
                            <Col xs={24} md={8}>
                              <Typography.Text>
                                <UserOutlined style={{ marginRight: '8px' }} />
                                <strong>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</strong> {scheduleItem.teacher}
                              </Typography.Text>
                            </Col>
                            
                            <Col xs={24} md={8}>
                              <Typography.Text>
                                <HomeOutlined style={{ marginRight: '8px' }} />
                                <strong>–ö–∞–±–∏–Ω–µ—Ç:</strong> {scheduleItem.cabinet}
                              </Typography.Text>
                            </Col>
                            
                            <Col xs={24} md={8}>
                              <Typography.Text>
                                <TeamOutlined style={{ marginRight: '8px' }} />
                                <strong>–ì—Ä—É–ø–ø–∞:</strong> –ò–° 1-1
                              </Typography.Text>
                            </Col>
                          </Row>
                        </Card>
                      </Timeline.Item>
                    ))}
                  </Timeline>
                </Card>
              ))}
            </Space>
          )
        }))}
      />
    </div>
  );
};